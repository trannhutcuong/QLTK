#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyTonKho
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QUANLYTONKHO")]
	public partial class MyDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertACCOUNT(ACCOUNT instance);
    partial void UpdateACCOUNT(ACCOUNT instance);
    partial void DeleteACCOUNT(ACCOUNT instance);
    partial void InsertHANGHOA(HANGHOA instance);
    partial void UpdateHANGHOA(HANGHOA instance);
    partial void DeleteHANGHOA(HANGHOA instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertKHO(KHO instance);
    partial void UpdateKHO(KHO instance);
    partial void DeleteKHO(KHO instance);
    partial void InsertPHIEUHANG(PHIEUHANG instance);
    partial void UpdatePHIEUHANG(PHIEUHANG instance);
    partial void DeletePHIEUHANG(PHIEUHANG instance);
    partial void InsertPHIEUXUATKHO(PHIEUXUATKHO instance);
    partial void UpdatePHIEUXUATKHO(PHIEUXUATKHO instance);
    partial void DeletePHIEUXUATKHO(PHIEUXUATKHO instance);
    #endregion
		
		public MyDBDataContext() : 
				base(global::QuanLyTonKho.Properties.Settings.Default.QUANLYTONKHOConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACCOUNT> ACCOUNTs
		{
			get
			{
				return this.GetTable<ACCOUNT>();
			}
		}
		
		public System.Data.Linq.Table<HANGHOA> HANGHOAs
		{
			get
			{
				return this.GetTable<HANGHOA>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHO> KHOs
		{
			get
			{
				return this.GetTable<KHO>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUHANG> PHIEUHANGs
		{
			get
			{
				return this.GetTable<PHIEUHANG>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUXUATKHO> PHIEUXUATKHOs
		{
			get
			{
				return this.GetTable<PHIEUXUATKHO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCOUNT")]
	public partial class ACCOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USERNAME;
		
		private string _PASS;
		
		private System.Nullable<byte> _TYPEACC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSChanging(string value);
    partial void OnPASSChanged();
    partial void OnTYPEACCChanging(System.Nullable<byte> value);
    partial void OnTYPEACCChanged();
    #endregion
		
		public ACCOUNT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASS", DbType="NChar(50)")]
		public string PASS
		{
			get
			{
				return this._PASS;
			}
			set
			{
				if ((this._PASS != value))
				{
					this.OnPASSChanging(value);
					this.SendPropertyChanging();
					this._PASS = value;
					this.SendPropertyChanged("PASS");
					this.OnPASSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPEACC", DbType="TinyInt")]
		public System.Nullable<byte> TYPEACC
		{
			get
			{
				return this._TYPEACC;
			}
			set
			{
				if ((this._TYPEACC != value))
				{
					this.OnTYPEACCChanging(value);
					this.SendPropertyChanging();
					this._TYPEACC = value;
					this.SendPropertyChanged("TYPEACC");
					this.OnTYPEACCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANGHOA")]
	public partial class HANGHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHANG;
		
		private string _TENHANG;
		
		private System.Nullable<int> _GIA;
		
		private string _MAKHO;
		
		private System.Nullable<System.DateTime> _NGAYNHAP;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntitySet<PHIEUHANG> _PHIEUHANGs;
		
		private EntitySet<PHIEUXUATKHO> _PHIEUXUATKHOs;
		
		private EntityRef<KHO> _KHO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHANGChanging(string value);
    partial void OnMAHANGChanged();
    partial void OnTENHANGChanging(string value);
    partial void OnTENHANGChanged();
    partial void OnGIAChanging(System.Nullable<int> value);
    partial void OnGIAChanged();
    partial void OnMAKHOChanging(string value);
    partial void OnMAKHOChanged();
    partial void OnNGAYNHAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYNHAPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public HANGHOA()
		{
			this._PHIEUHANGs = new EntitySet<PHIEUHANG>(new Action<PHIEUHANG>(this.attach_PHIEUHANGs), new Action<PHIEUHANG>(this.detach_PHIEUHANGs));
			this._PHIEUXUATKHOs = new EntitySet<PHIEUXUATKHO>(new Action<PHIEUXUATKHO>(this.attach_PHIEUXUATKHOs), new Action<PHIEUXUATKHO>(this.detach_PHIEUXUATKHOs));
			this._KHO = default(EntityRef<KHO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANG", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHANG
		{
			get
			{
				return this._MAHANG;
			}
			set
			{
				if ((this._MAHANG != value))
				{
					this.OnMAHANGChanging(value);
					this.SendPropertyChanging();
					this._MAHANG = value;
					this.SendPropertyChanged("MAHANG");
					this.OnMAHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHANG", DbType="NVarChar(20)")]
		public string TENHANG
		{
			get
			{
				return this._TENHANG;
			}
			set
			{
				if ((this._TENHANG != value))
				{
					this.OnTENHANGChanging(value);
					this.SendPropertyChanging();
					this._TENHANG = value;
					this.SendPropertyChanged("TENHANG");
					this.OnTENHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Int")]
		public System.Nullable<int> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHO", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string MAKHO
		{
			get
			{
				return this._MAKHO;
			}
			set
			{
				if ((this._MAKHO != value))
				{
					if (this._KHO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHOChanging(value);
					this.SendPropertyChanging();
					this._MAKHO = value;
					this.SendPropertyChanged("MAKHO");
					this.OnMAKHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYNHAP
		{
			get
			{
				return this._NGAYNHAP;
			}
			set
			{
				if ((this._NGAYNHAP != value))
				{
					this.OnNGAYNHAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHAP = value;
					this.SendPropertyChanged("NGAYNHAP");
					this.OnNGAYNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_PHIEUHANG", Storage="_PHIEUHANGs", ThisKey="MAHANG", OtherKey="MAHANG")]
		public EntitySet<PHIEUHANG> PHIEUHANGs
		{
			get
			{
				return this._PHIEUHANGs;
			}
			set
			{
				this._PHIEUHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_PHIEUXUATKHO", Storage="_PHIEUXUATKHOs", ThisKey="MAHANG", OtherKey="MAHANG")]
		public EntitySet<PHIEUXUATKHO> PHIEUXUATKHOs
		{
			get
			{
				return this._PHIEUXUATKHOs;
			}
			set
			{
				this._PHIEUXUATKHOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHO_HANGHOA", Storage="_KHO", ThisKey="MAKHO", OtherKey="MAKHO", IsForeignKey=true)]
		public KHO KHO
		{
			get
			{
				return this._KHO.Entity;
			}
			set
			{
				KHO previousValue = this._KHO.Entity;
				if (((previousValue != value) 
							|| (this._KHO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHO.Entity = null;
						previousValue.HANGHOAs.Remove(this);
					}
					this._KHO.Entity = value;
					if ((value != null))
					{
						value.HANGHOAs.Add(this);
						this._MAKHO = value.MAKHO;
					}
					else
					{
						this._MAKHO = default(string);
					}
					this.SendPropertyChanged("KHO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUHANGs(PHIEUHANG entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = this;
		}
		
		private void detach_PHIEUHANGs(PHIEUHANG entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = null;
		}
		
		private void attach_PHIEUXUATKHOs(PHIEUXUATKHO entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = this;
		}
		
		private void detach_PHIEUXUATKHOs(PHIEUXUATKHO entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKHACHHANG;
		
		private string _TENKHACHHANG;
		
		private string _SODIENTHOAI;
		
		private string _DIACHI;
		
		private EntitySet<PHIEUHANG> _PHIEUHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHACHHANGChanging(string value);
    partial void OnMAKHACHHANGChanged();
    partial void OnTENKHACHHANGChanging(string value);
    partial void OnTENKHACHHANGChanged();
    partial void OnSODIENTHOAIChanging(string value);
    partial void OnSODIENTHOAIChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._PHIEUHANGs = new EntitySet<PHIEUHANG>(new Action<PHIEUHANG>(this.attach_PHIEUHANGs), new Action<PHIEUHANG>(this.detach_PHIEUHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHACHHANG", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKHACHHANG
		{
			get
			{
				return this._MAKHACHHANG;
			}
			set
			{
				if ((this._MAKHACHHANG != value))
				{
					this.OnMAKHACHHANGChanging(value);
					this.SendPropertyChanging();
					this._MAKHACHHANG = value;
					this.SendPropertyChanged("MAKHACHHANG");
					this.OnMAKHACHHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHACHHANG", DbType="NVarChar(30)")]
		public string TENKHACHHANG
		{
			get
			{
				return this._TENKHACHHANG;
			}
			set
			{
				if ((this._TENKHACHHANG != value))
				{
					this.OnTENKHACHHANGChanging(value);
					this.SendPropertyChanging();
					this._TENKHACHHANG = value;
					this.SendPropertyChanged("TENKHACHHANG");
					this.OnTENKHACHHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODIENTHOAI", DbType="NVarChar(11)")]
		public string SODIENTHOAI
		{
			get
			{
				return this._SODIENTHOAI;
			}
			set
			{
				if ((this._SODIENTHOAI != value))
				{
					this.OnSODIENTHOAIChanging(value);
					this.SendPropertyChanging();
					this._SODIENTHOAI = value;
					this.SendPropertyChanged("SODIENTHOAI");
					this.OnSODIENTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_PHIEUHANG", Storage="_PHIEUHANGs", ThisKey="MAKHACHHANG", OtherKey="MAKHACHHANG")]
		public EntitySet<PHIEUHANG> PHIEUHANGs
		{
			get
			{
				return this._PHIEUHANGs;
			}
			set
			{
				this._PHIEUHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUHANGs(PHIEUHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_PHIEUHANGs(PHIEUHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHO")]
	public partial class KHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKHO;
		
		private string _TENKHO;
		
		private EntitySet<HANGHOA> _HANGHOAs;
		
		private EntitySet<PHIEUHANG> _PHIEUHANGs;
		
		private EntitySet<PHIEUXUATKHO> _PHIEUXUATKHOs;
		
		private EntitySet<PHIEUXUATKHO> _PHIEUXUATKHOs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHOChanging(string value);
    partial void OnMAKHOChanged();
    partial void OnTENKHOChanging(string value);
    partial void OnTENKHOChanged();
    #endregion
		
		public KHO()
		{
			this._HANGHOAs = new EntitySet<HANGHOA>(new Action<HANGHOA>(this.attach_HANGHOAs), new Action<HANGHOA>(this.detach_HANGHOAs));
			this._PHIEUHANGs = new EntitySet<PHIEUHANG>(new Action<PHIEUHANG>(this.attach_PHIEUHANGs), new Action<PHIEUHANG>(this.detach_PHIEUHANGs));
			this._PHIEUXUATKHOs = new EntitySet<PHIEUXUATKHO>(new Action<PHIEUXUATKHO>(this.attach_PHIEUXUATKHOs), new Action<PHIEUXUATKHO>(this.detach_PHIEUXUATKHOs));
			this._PHIEUXUATKHOs1 = new EntitySet<PHIEUXUATKHO>(new Action<PHIEUXUATKHO>(this.attach_PHIEUXUATKHOs1), new Action<PHIEUXUATKHO>(this.detach_PHIEUXUATKHOs1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHO", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKHO
		{
			get
			{
				return this._MAKHO;
			}
			set
			{
				if ((this._MAKHO != value))
				{
					this.OnMAKHOChanging(value);
					this.SendPropertyChanging();
					this._MAKHO = value;
					this.SendPropertyChanged("MAKHO");
					this.OnMAKHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHO", DbType="NVarChar(30)")]
		public string TENKHO
		{
			get
			{
				return this._TENKHO;
			}
			set
			{
				if ((this._TENKHO != value))
				{
					this.OnTENKHOChanging(value);
					this.SendPropertyChanging();
					this._TENKHO = value;
					this.SendPropertyChanged("TENKHO");
					this.OnTENKHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHO_HANGHOA", Storage="_HANGHOAs", ThisKey="MAKHO", OtherKey="MAKHO")]
		public EntitySet<HANGHOA> HANGHOAs
		{
			get
			{
				return this._HANGHOAs;
			}
			set
			{
				this._HANGHOAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHO_PHIEUHANG", Storage="_PHIEUHANGs", ThisKey="MAKHO", OtherKey="MAKHO")]
		public EntitySet<PHIEUHANG> PHIEUHANGs
		{
			get
			{
				return this._PHIEUHANGs;
			}
			set
			{
				this._PHIEUHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHO_PHIEUXUATKHO", Storage="_PHIEUXUATKHOs", ThisKey="MAKHO", OtherKey="MAKHOXUAT")]
		public EntitySet<PHIEUXUATKHO> PHIEUXUATKHOs
		{
			get
			{
				return this._PHIEUXUATKHOs;
			}
			set
			{
				this._PHIEUXUATKHOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHO_PHIEUXUATKHO1", Storage="_PHIEUXUATKHOs1", ThisKey="MAKHO", OtherKey="MAKHONHAP")]
		public EntitySet<PHIEUXUATKHO> PHIEUXUATKHOs1
		{
			get
			{
				return this._PHIEUXUATKHOs1;
			}
			set
			{
				this._PHIEUXUATKHOs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HANGHOAs(HANGHOA entity)
		{
			this.SendPropertyChanging();
			entity.KHO = this;
		}
		
		private void detach_HANGHOAs(HANGHOA entity)
		{
			this.SendPropertyChanging();
			entity.KHO = null;
		}
		
		private void attach_PHIEUHANGs(PHIEUHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHO = this;
		}
		
		private void detach_PHIEUHANGs(PHIEUHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHO = null;
		}
		
		private void attach_PHIEUXUATKHOs(PHIEUXUATKHO entity)
		{
			this.SendPropertyChanging();
			entity.KHO = this;
		}
		
		private void detach_PHIEUXUATKHOs(PHIEUXUATKHO entity)
		{
			this.SendPropertyChanging();
			entity.KHO = null;
		}
		
		private void attach_PHIEUXUATKHOs1(PHIEUXUATKHO entity)
		{
			this.SendPropertyChanging();
			entity.KHO1 = this;
		}
		
		private void detach_PHIEUXUATKHOs1(PHIEUXUATKHO entity)
		{
			this.SendPropertyChanging();
			entity.KHO1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUHANG")]
	public partial class PHIEUHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SOCHUNGTU;
		
		private string _MAHANG;
		
		private string _MAKHACHHANG;
		
		private string _MAKHO;
		
		private System.Nullable<System.DateTime> _NGAY;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _DIENGIAI;
		
		private System.Nullable<byte> _LOAIPHIEU;
		
		private EntityRef<HANGHOA> _HANGHOA;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<KHO> _KHO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSOCHUNGTUChanging(string value);
    partial void OnSOCHUNGTUChanged();
    partial void OnMAHANGChanging(string value);
    partial void OnMAHANGChanged();
    partial void OnMAKHACHHANGChanging(string value);
    partial void OnMAKHACHHANGChanged();
    partial void OnMAKHOChanging(string value);
    partial void OnMAKHOChanged();
    partial void OnNGAYChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnDIENGIAIChanging(string value);
    partial void OnDIENGIAIChanged();
    partial void OnLOAIPHIEUChanging(System.Nullable<byte> value);
    partial void OnLOAIPHIEUChanged();
    #endregion
		
		public PHIEUHANG()
		{
			this._HANGHOA = default(EntityRef<HANGHOA>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._KHO = default(EntityRef<KHO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOCHUNGTU", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SOCHUNGTU
		{
			get
			{
				return this._SOCHUNGTU;
			}
			set
			{
				if ((this._SOCHUNGTU != value))
				{
					this.OnSOCHUNGTUChanging(value);
					this.SendPropertyChanging();
					this._SOCHUNGTU = value;
					this.SendPropertyChanged("SOCHUNGTU");
					this.OnSOCHUNGTUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANG", DbType="NVarChar(10)")]
		public string MAHANG
		{
			get
			{
				return this._MAHANG;
			}
			set
			{
				if ((this._MAHANG != value))
				{
					if (this._HANGHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHANGChanging(value);
					this.SendPropertyChanging();
					this._MAHANG = value;
					this.SendPropertyChanged("MAHANG");
					this.OnMAHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHACHHANG", DbType="NVarChar(10)")]
		public string MAKHACHHANG
		{
			get
			{
				return this._MAKHACHHANG;
			}
			set
			{
				if ((this._MAKHACHHANG != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHACHHANGChanging(value);
					this.SendPropertyChanging();
					this._MAKHACHHANG = value;
					this.SendPropertyChanged("MAKHACHHANG");
					this.OnMAKHACHHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHO", DbType="NVarChar(10)")]
		public string MAKHO
		{
			get
			{
				return this._MAKHO;
			}
			set
			{
				if ((this._MAKHO != value))
				{
					if (this._KHO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHOChanging(value);
					this.SendPropertyChanging();
					this._MAKHO = value;
					this.SendPropertyChanged("MAKHO");
					this.OnMAKHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY", DbType="Date")]
		public System.Nullable<System.DateTime> NGAY
		{
			get
			{
				return this._NGAY;
			}
			set
			{
				if ((this._NGAY != value))
				{
					this.OnNGAYChanging(value);
					this.SendPropertyChanging();
					this._NGAY = value;
					this.SendPropertyChanged("NGAY");
					this.OnNGAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENGIAI", DbType="NVarChar(50)")]
		public string DIENGIAI
		{
			get
			{
				return this._DIENGIAI;
			}
			set
			{
				if ((this._DIENGIAI != value))
				{
					this.OnDIENGIAIChanging(value);
					this.SendPropertyChanging();
					this._DIENGIAI = value;
					this.SendPropertyChanged("DIENGIAI");
					this.OnDIENGIAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIPHIEU", DbType="TinyInt")]
		public System.Nullable<byte> LOAIPHIEU
		{
			get
			{
				return this._LOAIPHIEU;
			}
			set
			{
				if ((this._LOAIPHIEU != value))
				{
					this.OnLOAIPHIEUChanging(value);
					this.SendPropertyChanging();
					this._LOAIPHIEU = value;
					this.SendPropertyChanged("LOAIPHIEU");
					this.OnLOAIPHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_PHIEUHANG", Storage="_HANGHOA", ThisKey="MAHANG", OtherKey="MAHANG", IsForeignKey=true)]
		public HANGHOA HANGHOA
		{
			get
			{
				return this._HANGHOA.Entity;
			}
			set
			{
				HANGHOA previousValue = this._HANGHOA.Entity;
				if (((previousValue != value) 
							|| (this._HANGHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGHOA.Entity = null;
						previousValue.PHIEUHANGs.Remove(this);
					}
					this._HANGHOA.Entity = value;
					if ((value != null))
					{
						value.PHIEUHANGs.Add(this);
						this._MAHANG = value.MAHANG;
					}
					else
					{
						this._MAHANG = default(string);
					}
					this.SendPropertyChanged("HANGHOA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_PHIEUHANG", Storage="_KHACHHANG", ThisKey="MAKHACHHANG", OtherKey="MAKHACHHANG", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.PHIEUHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.PHIEUHANGs.Add(this);
						this._MAKHACHHANG = value.MAKHACHHANG;
					}
					else
					{
						this._MAKHACHHANG = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHO_PHIEUHANG", Storage="_KHO", ThisKey="MAKHO", OtherKey="MAKHO", IsForeignKey=true)]
		public KHO KHO
		{
			get
			{
				return this._KHO.Entity;
			}
			set
			{
				KHO previousValue = this._KHO.Entity;
				if (((previousValue != value) 
							|| (this._KHO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHO.Entity = null;
						previousValue.PHIEUHANGs.Remove(this);
					}
					this._KHO.Entity = value;
					if ((value != null))
					{
						value.PHIEUHANGs.Add(this);
						this._MAKHO = value.MAKHO;
					}
					else
					{
						this._MAKHO = default(string);
					}
					this.SendPropertyChanged("KHO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUXUATKHO")]
	public partial class PHIEUXUATKHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SOCHUNGTU;
		
		private string _MAHANG;
		
		private string _MAKHOXUAT;
		
		private string _MAKHONHAP;
		
		private System.Nullable<System.DateTime> _NGAY;
		
		private string _DIENGIAI;
		
		private EntityRef<HANGHOA> _HANGHOA;
		
		private EntityRef<KHO> _KHO;
		
		private EntityRef<KHO> _KHO1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSOCHUNGTUChanging(string value);
    partial void OnSOCHUNGTUChanged();
    partial void OnMAHANGChanging(string value);
    partial void OnMAHANGChanged();
    partial void OnMAKHOXUATChanging(string value);
    partial void OnMAKHOXUATChanged();
    partial void OnMAKHONHAPChanging(string value);
    partial void OnMAKHONHAPChanged();
    partial void OnNGAYChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYChanged();
    partial void OnDIENGIAIChanging(string value);
    partial void OnDIENGIAIChanged();
    #endregion
		
		public PHIEUXUATKHO()
		{
			this._HANGHOA = default(EntityRef<HANGHOA>);
			this._KHO = default(EntityRef<KHO>);
			this._KHO1 = default(EntityRef<KHO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOCHUNGTU", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SOCHUNGTU
		{
			get
			{
				return this._SOCHUNGTU;
			}
			set
			{
				if ((this._SOCHUNGTU != value))
				{
					this.OnSOCHUNGTUChanging(value);
					this.SendPropertyChanging();
					this._SOCHUNGTU = value;
					this.SendPropertyChanged("SOCHUNGTU");
					this.OnSOCHUNGTUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANG", DbType="NVarChar(10)")]
		public string MAHANG
		{
			get
			{
				return this._MAHANG;
			}
			set
			{
				if ((this._MAHANG != value))
				{
					if (this._HANGHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHANGChanging(value);
					this.SendPropertyChanging();
					this._MAHANG = value;
					this.SendPropertyChanged("MAHANG");
					this.OnMAHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHOXUAT", DbType="NVarChar(10)")]
		public string MAKHOXUAT
		{
			get
			{
				return this._MAKHOXUAT;
			}
			set
			{
				if ((this._MAKHOXUAT != value))
				{
					if (this._KHO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHOXUATChanging(value);
					this.SendPropertyChanging();
					this._MAKHOXUAT = value;
					this.SendPropertyChanged("MAKHOXUAT");
					this.OnMAKHOXUATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHONHAP", DbType="NVarChar(10)")]
		public string MAKHONHAP
		{
			get
			{
				return this._MAKHONHAP;
			}
			set
			{
				if ((this._MAKHONHAP != value))
				{
					if (this._KHO1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHONHAPChanging(value);
					this.SendPropertyChanging();
					this._MAKHONHAP = value;
					this.SendPropertyChanged("MAKHONHAP");
					this.OnMAKHONHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAY", DbType="Date")]
		public System.Nullable<System.DateTime> NGAY
		{
			get
			{
				return this._NGAY;
			}
			set
			{
				if ((this._NGAY != value))
				{
					this.OnNGAYChanging(value);
					this.SendPropertyChanging();
					this._NGAY = value;
					this.SendPropertyChanged("NGAY");
					this.OnNGAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENGIAI", DbType="NVarChar(50)")]
		public string DIENGIAI
		{
			get
			{
				return this._DIENGIAI;
			}
			set
			{
				if ((this._DIENGIAI != value))
				{
					this.OnDIENGIAIChanging(value);
					this.SendPropertyChanging();
					this._DIENGIAI = value;
					this.SendPropertyChanged("DIENGIAI");
					this.OnDIENGIAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_PHIEUXUATKHO", Storage="_HANGHOA", ThisKey="MAHANG", OtherKey="MAHANG", IsForeignKey=true)]
		public HANGHOA HANGHOA
		{
			get
			{
				return this._HANGHOA.Entity;
			}
			set
			{
				HANGHOA previousValue = this._HANGHOA.Entity;
				if (((previousValue != value) 
							|| (this._HANGHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGHOA.Entity = null;
						previousValue.PHIEUXUATKHOs.Remove(this);
					}
					this._HANGHOA.Entity = value;
					if ((value != null))
					{
						value.PHIEUXUATKHOs.Add(this);
						this._MAHANG = value.MAHANG;
					}
					else
					{
						this._MAHANG = default(string);
					}
					this.SendPropertyChanged("HANGHOA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHO_PHIEUXUATKHO", Storage="_KHO", ThisKey="MAKHOXUAT", OtherKey="MAKHO", IsForeignKey=true)]
		public KHO KHO
		{
			get
			{
				return this._KHO.Entity;
			}
			set
			{
				KHO previousValue = this._KHO.Entity;
				if (((previousValue != value) 
							|| (this._KHO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHO.Entity = null;
						previousValue.PHIEUXUATKHOs.Remove(this);
					}
					this._KHO.Entity = value;
					if ((value != null))
					{
						value.PHIEUXUATKHOs.Add(this);
						this._MAKHOXUAT = value.MAKHO;
					}
					else
					{
						this._MAKHOXUAT = default(string);
					}
					this.SendPropertyChanged("KHO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHO_PHIEUXUATKHO1", Storage="_KHO1", ThisKey="MAKHONHAP", OtherKey="MAKHO", IsForeignKey=true)]
		public KHO KHO1
		{
			get
			{
				return this._KHO1.Entity;
			}
			set
			{
				KHO previousValue = this._KHO1.Entity;
				if (((previousValue != value) 
							|| (this._KHO1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHO1.Entity = null;
						previousValue.PHIEUXUATKHOs1.Remove(this);
					}
					this._KHO1.Entity = value;
					if ((value != null))
					{
						value.PHIEUXUATKHOs1.Add(this);
						this._MAKHONHAP = value.MAKHO;
					}
					else
					{
						this._MAKHONHAP = default(string);
					}
					this.SendPropertyChanged("KHO1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
